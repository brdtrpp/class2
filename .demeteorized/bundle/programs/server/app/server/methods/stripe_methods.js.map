{"version":3,"sources":["meteor://ðŸ’»app/server/methods/stripe_methods.js"],"names":[],"mappings":"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","file":"/server/methods/stripe_methods.js","sourcesContent":["Meteor.methods({\n  refundEvent: function(doc) {\n    if (doc.owner === Meteor.userId()) {\n      var attendees = Attendee.find({eventId: doc._id});\n      _.forEach(attendees.fetch(), function(item){\n        var att = item;\n        Meteor.call('refundAttendee', att);\n      });\n    }\n  },\n\n  refundAttendee: function (att) {\n    console.log(att);\n\n    if (att.charge) {\n      var Stripe = StripeAPI(Meteor.settings.private.stripe);\n      var stripeRefund = Meteor.wrapAsync(Stripe.refunds.create,Stripe.refunds);\n      stripeRefund({\n        charge: att.charge,\n        refund_application_fee: true,\n        reverse_transfer: true,\n      }, function(err, refund) {\n        if (refund) {\n          var doc = refund;\n          Meteor.call('refundAtt', doc, att);\n        } else if (err) {\n          console.log(err);\n        }\n      });\n    } else {\n      var doc = \"free\";\n      Meteor.call('refundAtt', doc, att);\n    }\n\n  },\n\n  getAccount: function(aid) {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var stripeAccounts = Meteor.wrapAsync(Stripe.accounts.retrieve,Stripe.accounts);\n    try {\n      return  stripeAccounts(aid);\n    }catch(error){\n      throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n    }\n  },\n\n  getCharge: function(charge) {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var stripeCharges = Meteor.wrapAsync(Stripe.charges.retrieve,Stripe.charges);\n    try {\n      return stripeCharges(charge);\n    }catch(error){\n      throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n    }\n  },\n\n  charge: function(event, att) {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var user = Meteor.users.findOne({_id: Meteor.userId()});\n    var owner = Meteor.users.findOne({_id: event.owner});\n    var stripeCardCharge = Meteor.wrapAsync(Stripe.charges.create,Stripe.charges);\n    //end price is in cents and marked up 5%\n    var endPrice = event.price * 110;\n    var appfee = endPrice - ( event.price * 100 );\n    var available = event.attendeeCount - Attendee.find({eventId: event._id}).count();\n    if (event.owner == Meteor.userId()) {\n      throw new Meteor.Error('SelfReg', \"Cannot signup for your own class.\");\n\n    } else if (\n      Attendee.find({\n        eventId: event._id,\n        attendeeFirstName: att.attendeeFirstName,\n        attendeeLastName: att.attendeeLastName,\n        owner: Meteor.userId()\n      }).count() != 0){\n        throw new Meteor.Error('already', \"That person has already registered for this class.\");\n    } else if (Meteor.user().profile.cardId == undefined) {\n      throw new Meteor.Error('NoCard', \"You don't have a card stored.\");\n    } else if (available === 0) {\n      throw new Meteor.Error('NoSpace', \"This class is full\");\n    } else try{\n      return stripeCardCharge({\n          amount: endPrice.toFixed(0),\n          currency: \"USD\",\n          customer: user.profile.customerId,\n          application_fee: appfee.toFixed(0),\n          description: event.title + \" \" + event.start,\n          destination: owner.profile.accountId\n      });\n    } catch(error) {\n      throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n    }\n  },\n\n\n  createCustomer : function() {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var stripeCustomersCreate = Meteor.wrapAsync(Stripe.customers.create,Stripe.customers);\n    try {\n      return stripeCustomersCreate({\n        description: 'Attendee',\n      });\n    }catch(error){\n      throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n    }\n  },\n\n  createCard: function (stripeToken) {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var user = Meteor.users.findOne({_id: Meteor.userId()});\n    var stripeCardCreate = Meteor.wrapAsync(Stripe.customers.createSource,Stripe.customers);\n    var stripeCardDelete = Meteor.wrapAsync(Stripe.customers.deleteCard,Stripe.customers);\n    var create = stripeCardCreate(\n      user.profile.customerId, {\n        source: stripeToken\n        });\n    if (user.profile.cardId == undefined) {\n      try {\n        return create;\n      }catch(error){\n        throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n      }\n    } else {\n      stripeCardDelete(user.profile.customerId, user.profile.cardId);\n      Meteor.users.update({_id: Meteor.userId()}, {$set: {'profile.cardId': null}});\n      try {\n        return create;\n      }catch(error){\n        throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n      }\n    }\n  },\n\n  createAccount: function(doc, stripeToken) {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var user = Meteor.users.findOne({_id: Meteor.userId()});\n    var stripeCreateAccount = Meteor.wrapAsync(Stripe.accounts.create,Stripe.accounts);\n    try {\n      return stripeCreateAccount({\n        managed: true,\n        country: 'US',\n        email: user.emails[0].address,\n        business_name: doc.businessName,\n        external_account: stripeToken,\n        legal_entity: {\n          first_name: doc.legalEntity.firstName,\n          last_name: doc.legalEntity.lastName,\n          type: doc.legalEntity.type,\n          address: {\n            city: doc.address.city,\n            state: doc.address.state,\n            line1: doc.address.street,\n            postal_code: doc.address.zip,\n          },\n          dob: {\n            day: moment(doc.legalEntity.dob).get('date'),\n            month: moment(doc.legalEntity.dob).get('month'),\n            year: moment(doc.legalEntity.dob).get('year')\n          },\n        },\n        tos_acceptance: {\n          date: moment().unix(),\n          ip: this.connection.clientAddress,\n        },\n        transfer_schedule: {\n          delay_days: 7,\n          interval: 'weekly',\n          weekly_anchor: 'friday'},\n      });\n    }catch(error){\n      throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n    }\n  },\n\n  getCard : function() {\n    var Stripe = StripeAPI(Meteor.settings.private.stripe);\n    var user = Meteor.users.findOne({_id: Meteor.userId()});\n    var stripeCardGet = Meteor.wrapAsync(Stripe.customers.retrieveCard,Stripe.customers);\n    try {\n      return stripeCardGet(user.profile.customerId, user.profile.cardId);\n    }catch(error){\n      throw new Meteor.Error(\"StripeAPIFailure\", error.message);\n    }\n  }\n});"]}