{"version":3,"sources":["meteor://ðŸ’»app/server/methods/attendee_methods.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/methods/attendee_methods.js","sourcesContent":["Meteor.methods({\n  addCourseAtt: function(event, att, charge) {\n    var course = CalEvent.find({courseId: event.courseId}).fetch();\n    _.forEach(course, function(item){\n      if (moment(item.start).isBefore(event.start)) {\n        console.log(item._id + \" is before current class\");\n      } else {\n        event = item;\n        Meteor.call(\"addAtt\", event, att, charge);\n      }\n    });\n  },\n  \n  addAtt: function(event, att, charge) {\n    if (moment(event.start).isAfter(moment())) {\n      Attendee.insert({\n        eventId: event._id,\n        attendeeFirstName: att.firstName,\n        attendeeLastName: att.lastName,\n        charge: charge.id\n      });\n    }\n  },\n  \n  removeAtt: function(doc, att) {\n    console.log(doc, att)\n  },\n  \n  refundAtt: function(doc, att) {\n    Attendee.update({_id: att._id}, \n      {$set: {\n        eventId: \"refunded\",\n        reEventId: att.eventId,\n        refund: doc.id,\n      }}\n    );\n  }\n});"]}