{"version":3,"sources":["meteor://ðŸ’»app/server/methods/attendee_methods.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC;AACb,cAAY,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE;AACzC,QAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAC/D,KAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAS,IAAI,EAAC;AAC9B,UAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC5C,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC,CAAC;OACpD,MAAM;AACL,aAAK,GAAG,IAAI,CAAC;AACb,cAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;OAC3C;KACF,CAAC,CAAC;GACJ;;AAED,QAAM,EAAE,UAAS,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE;AACnC,QAAK,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAM,KAAK,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAG,EAAE;AAC/E,cAAQ,CAAC,MAAM,CAAC;AACd,eAAO,EAAE,KAAK,CAAC,GAAG;AAClB,yBAAiB,EAAE,GAAG,CAAC,iBAAiB;AACxC,wBAAgB,EAAE,GAAG,CAAC,gBAAgB;AACtC,cAAM,EAAE,MAAM,CAAC,EAAE;OAClB,CAAC,CAAC;KACJ;GACF;;AAED,WAAS,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;AAC5B,WAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;GACvB;;AAED,WAAS,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;AAC5B,YAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAC,EAC5B,EAAC,IAAI,EAAE;AACL,eAAO,EAAE,UAAU;AACnB,iBAAS,EAAE,GAAG,CAAC,OAAO;AACtB,cAAM,EAAE,GAAG,CAAC,EAAE;OACf,EAAC,CACH,CAAC;GACH;CACF,CAAC,CAAC,sE","file":"/server/methods/attendee_methods.js","sourcesContent":["Meteor.methods({\n  addCourseAtt: function(event, att, charge) {\n    var course = CalEvent.find({courseId: event.courseId}).fetch();\n    _.forEach(course, function(item){\n      if (moment(item.start).isBefore(event.start)) {\n        console.log(item._id + \" is before current class\");\n      } else {\n        event = item;\n        Meteor.call(\"addAtt\", event, att, charge);\n      }\n    });\n  },\n  \n  addAtt: function(event, att, charge) {\n    if ((moment(event.start).isAfter(moment())) && (event.owner != Meteor.userId())) {\n      Attendee.insert({\n        eventId: event._id,\n        attendeeFirstName: att.attendeeFirstName,\n        attendeeLastName: att.attendeeLastName,\n        charge: charge.id\n      });\n    }\n  },\n  \n  removeAtt: function(doc, att) {\n    console.log(doc, att);\n  },\n  \n  refundAtt: function(doc, att) {\n    Attendee.update({_id: att._id}, \n      {$set: {\n        eventId: \"refunded\",\n        reEventId: att.eventId,\n        refund: doc.id,\n      }}\n    );\n  }\n});"]}