{"version":3,"sources":["meteor://ðŸ’»app/collections/user-schema.js"],"names":[],"mappings":"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","file":"/collections/user-schema.js","sourcesContent":["Schema = {},\n\nSchema.UserProfile = new SimpleSchema({\n  createdAt: {\n    type: Date,\n    autoValue: function() {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {$setOnInsert: new Date};\n      } else {\n        this.unset();  // Prevent user from supplying their own value\n      }\n    },\n    autoform: {\n      omit: true\n    }\n  },\n  firstName: {\n      type: String,\n      optional: true,\n    },\n  lastName: {\n      type: String,\n      optional: true\n  },\n  birthday: {\n      type: Date,\n      optional: true,\n      autoform: {\n        afFieldInput: {\n          type: \"bootstrap-datepicker\"\n        }\n      }\n  },\n  gender: {\n      type: String,\n      allowedValues: ['Male', 'Female'],\n      optional: true\n  },\n  organization : {\n      type: String,\n      optional: true\n  },\n  website: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Url,\n      optional: true\n  },\n  bio: {\n      type: String,\n      optional: true\n  },\n  homeAddress: {\n    type: AddressSchema,\n    optional: true,\n  },\n  businessAddress: {\n    type: AddressSchema,\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  },\n\n  customerId: {\n    type: String,\n    autoValue: function() {\n      if (this.isInsert) {\n        Meteor.call('createCustomer', function(error, result) {\n          if (error) {\n            console.log(error);\n          } else {\n            c = result.id;\n          }\n        });\n        return c;\n      } else {\n        this.unset();  // Prevent user from supplying their own value\n      }\n    },\n    autoform: {\n      omit: true\n    }\n  },\n\n  accountId: {\n    type : String,\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  },\n  cardId : {\n    type: String,\n    optional: true,\n    blackbox: true,\n    autoform: {\n      omit: true\n    }\n  },\n});\n\nSchema.User = new SimpleSchema({\n    username: {\n      type: String,\n      regEx: /^[a-z0-9A-Z_]{3,15}$/,\n      unique: true,\n      optional: true,\n    },\n    emails: {\n        type: Array,\n        optional: true\n    },\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n    profile: {\n        type: Schema.UserProfile,\n        optional: true\n    },\n\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n});\n\nMeteor.users.attachSchema(Schema.User);"]}