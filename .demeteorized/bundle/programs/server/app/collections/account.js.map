{"version":3,"sources":["meteor://ðŸ’»app/collections/account.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/collections/account.js","sourcesContent":["Account = new Mongo.Collection('account');\n\nExternalAccSchema = new SimpleSchema({\n  accountNumber: {\n    type: String,\n  },\n  // country: {\n  //   type: String,\n  // },\n  routingNumber: {\n    type: String,\n  }\n});\n\nLegalEntSchema = new SimpleSchema({\n  business_name: {\n    type: String,\n  },\n  firstName: {\n    type: String,\n    // defaultValue: function() {\n    //   var user = Meteor.user().profile.firstName;\n    //   return user; \n    // }  \n  },\n  lastName: {\n    type: String,\n    // defaultValue: function() {\n    //   var user = Meteor.user().profile.lastName;\n    //   return user; \n    // }  \n  },\n  dob: {\n    type: Date,\n    autoform: {\n      afFieldInput: {\n        type: \"bootstrap-datepicker\",\n      }\n    },\n    // defaultValue: function() {\n    //   var user = Meteor.user().profile.birthday;\n    //   return user; \n    // }  \n  },\n  type: {\n    type: String,\n    label: \"Type of Business\",\n    allowedValues: ['individual', 'corporation'],\n    autoform: {\n      options: {\n        individual: \"Individual\",\n        corporation: \"Corporation\",\n      }\n    }\n  },\n\n}),\n\nAccount.attachSchema(new SimpleSchema({\n  // createdAt: {\n  //   type: Date,\n  //   autoValue: function() {\n  //     if (this.isInsert) {\n  //       return new Date;\n  //     } else {\n  //       this.unset();  // Prevent user from supplying their own value\n  //     }\n  //   },\n  //   autoform: {\n  //     omit: true\n  //   },\n  // },\n  businessName: {\n    type: String,\n  },\n  legalEntity: {\n    type: LegalEntSchema\n  },\n  address: {\n    type: AddressSchema\n  },\n  externalAccount: {\n    type: ExternalAccSchema,\n    label: \"Bank Account Information\"\n  },\n  acceptedTos: {\n    type: Boolean,\n    label: \"I have read and accepted Class, Inc. and Stripes terms of service\"\n  },\n  // acceptedIp: {\n  //   type: String,\n  //   defaultValue: function(){\n  //     var clientIP = this.connection.clientAddress;\n  //     return clientIP;\n  //   }\n  // }\n}));\n\n"]}