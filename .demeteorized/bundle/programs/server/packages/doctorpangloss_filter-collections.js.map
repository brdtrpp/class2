{"version":3,"sources":["meteor://ðŸ’»app/packages/doctorpangloss_filter-collections/packages/doctorpangloss_filter-collections.js"],"names":[],"mappingsfile":"/packages/doctorpangloss_filter-collections.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/doctorpangloss:filter-collections/filter-collections-server.js                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nFilterCollections = {};                                                                                             // 1\n                                                                                                                    // 2\nFilterCollections._extendedPublishCursor = function (cursor, sub, collection, name) {                               // 3\n    var observeHandle = cursor.observeChanges({                                                                     // 4\n        added: function (id, fields) {                                                                              // 5\n            // Add the name of this filter collection                                                               // 6\n            if (name) {                                                                                             // 7\n                fields.__filter = name;                                                                             // 8\n            }                                                                                                       // 9\n            sub.added(collection, id, fields);                                                                      // 10\n        },                                                                                                          // 11\n        changed: function (id, fields) {                                                                            // 12\n            if (name) {                                                                                             // 13\n                fields.__filter = name;                                                                             // 14\n            }                                                                                                       // 15\n            sub.changed(collection, id, fields);                                                                    // 16\n        },                                                                                                          // 17\n        removed: function (id) {                                                                                    // 18\n            sub.removed(collection, id);                                                                            // 19\n        }                                                                                                           // 20\n    });                                                                                                             // 21\n                                                                                                                    // 22\n    // We don't call sub.ready() here: it gets called in livedata_server, after                                     // 23\n    // possibly calling _publishCursor on multiple returned cursors.                                                // 24\n                                                                                                                    // 25\n    // register stop callback (expects lambda w/ no args).                                                          // 26\n    sub.onStop(function () {                                                                                        // 27\n        observeHandle.stop();                                                                                       // 28\n    });                                                                                                             // 29\n};                                                                                                                  // 30\n                                                                                                                    // 31\nFilterCollections.publish = function (collection, options) {                                                        // 32\n    var optionalFunction = Match.Optional(Function);                                                                // 33\n                                                                                                                    // 34\n    check(collection, Mongo.Collection);                                                                            // 35\n    var optionalString = Match.Optional(String);                                                                    // 36\n    check(options, Match.Optional({                                                                                 // 37\n        name: optionalString,                                                                                       // 38\n        callbacks: Match.Optional({                                                                                 // 39\n            allow: optionalFunction,                                                                                // 40\n            beforePublish: optionalFunction,                                                                        // 41\n            afterPublish: optionalFunction                                                                          // 42\n        })                                                                                                          // 43\n    }));                                                                                                            // 44\n    options = options || {};                                                                                        // 45\n    var callbacks = options.callbacks || {};                                                                        // 46\n                                                                                                                    // 47\n    _.defaults(options, {                                                                                           // 48\n        name: collection._name                                                                                      // 49\n    });                                                                                                             // 50\n                                                                                                                    // 51\n    var publisherResultsCollectionName = options.name;                                                              // 52\n    var publisherResultsId = 'fc-' + options.name + '-results';                                                     // 53\n    var publisherCountId = 'fc-' + options.name + '-count';                                                         // 54\n    var publisherCountCollectionName = options.name + 'CountFC';                                                    // 55\n                                                                                                                    // 56\n    /**                                                                                                             // 57\n     * Publish query results.                                                                                       // 58\n     */                                                                                                             // 59\n                                                                                                                    // 60\n    Meteor.publish(publisherResultsId, function (query) {                                                           // 61\n        var self = this;                                                                                            // 62\n        var allow = true;                                                                                           // 63\n                                                                                                                    // 64\n        // Check if this publish is allowed.                                                                        // 65\n        if (callbacks.allow) {                                                                                      // 66\n            allow = callbacks.allow(query, this);                                                                   // 67\n        }                                                                                                           // 68\n                                                                                                                    // 69\n        if (!allow) {                                                                                               // 70\n            throw new Meteor.Error(417, 'Not allowed');                                                             // 71\n        }                                                                                                           // 72\n                                                                                                                    // 73\n        query = query || {};                                                                                        // 74\n                                                                                                                    // 75\n        _.defaults(query, {                                                                                         // 76\n            selector: {},                                                                                           // 77\n            options: {}                                                                                             // 78\n        });                                                                                                         // 79\n                                                                                                                    // 80\n        _.defaults(query.options, {                                                                                 // 81\n            sort: [],                                                                                               // 82\n            skip: 0,                                                                                                // 83\n            limit: 10                                                                                               // 84\n        });                                                                                                         // 85\n                                                                                                                    // 86\n        if (callbacks.beforePublish) {                                                                              // 87\n            query = callbacks.beforePublish(query, this) || query;                                                  // 88\n        }                                                                                                           // 89\n                                                                                                                    // 90\n                                                                                                                    // 91\n        var cursor = collection.find(query.selector, query.options);                                                // 92\n                                                                                                                    // 93\n        if (callbacks.afterPublish) {                                                                               // 94\n            cursor = callbacks.afterPublish('results', cursor, this) || cursor;                                     // 95\n        }                                                                                                           // 96\n                                                                                                                    // 97\n        FilterCollections._extendedPublishCursor(cursor, this, publisherResultsCollectionName, publisherResultsId); // 98\n                                                                                                                    // 99\n        // Call ready since the extended publish cursor, like the official publish cursor version, does not call    // 100\n        // ready by itself.                                                                                         // 101\n        self.ready();                                                                                               // 102\n    });                                                                                                             // 103\n                                                                                                                    // 104\n    /**                                                                                                             // 105\n     * Publish result count.                                                                                        // 106\n     */                                                                                                             // 107\n                                                                                                                    // 108\n    Meteor.publish(publisherCountId, function (query) {                                                             // 109\n        var self = this;                                                                                            // 110\n        var allow = true;                                                                                           // 111\n        var cursor = {};                                                                                            // 112\n                                                                                                                    // 113\n        if (callbacks.allow                                                                                         // 114\n            && _.isFunction(callbacks.allow)) {                                                                     // 115\n            allow = callbacks.allow(query, this);                                                                   // 116\n        }                                                                                                           // 117\n                                                                                                                    // 118\n        if (!allow) {                                                                                               // 119\n            throw new Meteor.Error(417, 'Not allowed');                                                             // 120\n        }                                                                                                           // 121\n                                                                                                                    // 122\n        query = query || {};                                                                                        // 123\n        _.defaults(query, {                                                                                         // 124\n            selector: {}                                                                                            // 125\n        });                                                                                                         // 126\n                                                                                                                    // 127\n        if (callbacks.beforePublish) {                                                                              // 128\n            query = callbacks.beforePublish(query, this) || query;                                                  // 129\n        }                                                                                                           // 130\n                                                                                                                    // 131\n        var count = collection.find(query.selector).count() || 0;                                                   // 132\n                                                                                                                    // 133\n        if (callbacks.afterPublish) {                                                                               // 134\n            cursor = callbacks.afterPublish('count', cursor, this) || cursor;                                       // 135\n        }                                                                                                           // 136\n                                                                                                                    // 137\n        self.added(publisherCountCollectionName, Meteor.uuid(), {                                                   // 138\n            count: count,                                                                                           // 139\n            query: query                                                                                            // 140\n        });                                                                                                         // 141\n                                                                                                                    // 142\n        self.ready();                                                                                               // 143\n    });                                                                                                             // 144\n};                                                                                                                  // 145\n                                                                                                                    // 146\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}